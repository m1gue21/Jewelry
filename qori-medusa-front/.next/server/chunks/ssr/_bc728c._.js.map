{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/common/icons/chevron-down.tsx"],"sourcesContent":["import React from \"react\"\n\nimport { IconProps } from \"types/icon\"\n\nconst ChevronDown: React.FC<IconProps> = ({\n  size = \"16\",\n  color = \"currentColor\",\n  ...attributes\n}) => {\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...attributes}\n    >\n      <path\n        d=\"M4 6L8 10L12 6\"\n        stroke={color}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default ChevronDown\n"],"names":[],"mappings":";;;;;AAIA,MAAM,cAAmC,CAAC,EACxC,OAAO,IAAI,EACX,QAAQ,cAAc,EACtB,GAAG,YACJ;IACC,qBACE,8OAAC;QACC,OAAO;QACP,QAAQ;QACR,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,UAAU;kBAEd,cAAA,8OAAC;YACC,GAAE;YACF,QAAQ;YACR,aAAY;YACZ,eAAc;YACd,gBAAe;;;;;;;;;;;AAIvB;uCAEe"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/lib/util/isEmpty.ts"],"sourcesContent":["export const isObject = (input: any) => input instanceof Object\nexport const isArray = (input: any) => Array.isArray(input)\nexport const isEmpty = (input: any) => {\n  return (\n    input === null ||\n    input === undefined ||\n    (isObject(input) && Object.keys(input).length === 0) ||\n    (isArray(input) && (input as any[]).length === 0) ||\n    (typeof input === \"string\" && input.trim().length === 0)\n  )\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,WAAW,CAAC,QAAe,iBAAiB;AAClD,MAAM,UAAU,CAAC,QAAe,MAAM,OAAO,CAAC;AAC9C,MAAM,UAAU,CAAC;IACtB,OACE,UAAU,QACV,UAAU,aACT,SAAS,UAAU,OAAO,IAAI,CAAC,OAAO,MAAM,KAAK,KACjD,QAAQ,UAAU,AAAC,MAAgB,MAAM,KAAK,KAC9C,OAAO,UAAU,YAAY,MAAM,IAAI,GAAG,MAAM,KAAK;AAE1D"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/lib/util/money.ts"],"sourcesContent":["import { isEmpty } from \"./isEmpty\"\n\ntype ConvertToLocaleParams = {\n  amount: number\n  currency_code: string\n  minimumFractionDigits?: number\n  maximumFractionDigits?: number\n  locale?: string\n}\n\nexport const convertToLocale = ({\n  amount,\n  currency_code,\n  minimumFractionDigits,\n  maximumFractionDigits,\n  locale = \"en-US\",\n}: ConvertToLocaleParams) => {\n  return currency_code && !isEmpty(currency_code)\n    ? new Intl.NumberFormat(locale, {\n        style: \"currency\",\n        currency: currency_code,\n        minimumFractionDigits,\n        maximumFractionDigits,\n      }).format(amount)\n    : amount.toString()\n}\n"],"names":[],"mappings":";;;AAAA;;AAUO,MAAM,kBAAkB,CAAC,EAC9B,MAAM,EACN,aAAa,EACb,qBAAqB,EACrB,qBAAqB,EACrB,SAAS,OAAO,EACM;IACtB,OAAO,iBAAiB,CAAC,CAAA,GAAA,6HAAA,CAAA,UAAO,AAAD,EAAE,iBAC7B,IAAI,KAAK,YAAY,CAAC,QAAQ;QAC5B,OAAO;QACP,UAAU;QACV;QACA;IACF,GAAG,MAAM,CAAC,UACV,OAAO,QAAQ;AACrB"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/account/components/overview/index.tsx"],"sourcesContent":["import { Container } from \"@medusajs/ui\"\n\nimport ChevronDown from \"@modules/common/icons/chevron-down\"\nimport LocalizedClientLink from \"@modules/common/components/localized-client-link\"\nimport { convertToLocale } from \"@lib/util/money\"\nimport { HttpTypes } from \"@medusajs/types\"\n\ntype OverviewProps = {\n  customer: HttpTypes.StoreCustomer | null\n  orders: HttpTypes.StoreOrder[] | null\n}\n\nconst Overview = ({ customer, orders }: OverviewProps) => {\n  return (\n    <div data-testid=\"overview-page-wrapper\">\n      <div className=\"hidden small:block\">\n        <div className=\"text-xl-semi flex justify-between items-center mb-4\">\n          <span data-testid=\"welcome-message\" data-value={customer?.first_name}>\n            Hello {customer?.first_name}\n          </span>\n          <span className=\"text-small-regular text-ui-fg-base\">\n            Signed in as:{\" \"}\n            <span\n              className=\"font-semibold\"\n              data-testid=\"customer-email\"\n              data-value={customer?.email}\n            >\n              {customer?.email}\n            </span>\n          </span>\n        </div>\n        <div className=\"flex flex-col py-8 border-t border-gray-200\">\n          <div className=\"flex flex-col gap-y-4 h-full col-span-1 row-span-2 flex-1\">\n            <div className=\"flex items-start gap-x-16 mb-6\">\n              <div className=\"flex flex-col gap-y-4\">\n                <h3 className=\"text-large-semi\">Profile</h3>\n                <div className=\"flex items-end gap-x-2\">\n                  <span\n                    className=\"text-3xl-semi leading-none\"\n                    data-testid=\"customer-profile-completion\"\n                    data-value={getProfileCompletion(customer)}\n                  >\n                    {getProfileCompletion(customer)}%\n                  </span>\n                  <span className=\"uppercase text-base-regular text-ui-fg-subtle\">\n                    Completed\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"flex flex-col gap-y-4\">\n                <h3 className=\"text-large-semi\">Addresses</h3>\n                <div className=\"flex items-end gap-x-2\">\n                  <span\n                    className=\"text-3xl-semi leading-none\"\n                    data-testid=\"addresses-count\"\n                    data-value={customer?.addresses?.length || 0}\n                  >\n                    {customer?.addresses?.length || 0}\n                  </span>\n                  <span className=\"uppercase text-base-regular text-ui-fg-subtle\">\n                    Saved\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col gap-y-4\">\n              <div className=\"flex items-center gap-x-2\">\n                <h3 className=\"text-large-semi\">Recent orders</h3>\n              </div>\n              <ul\n                className=\"flex flex-col gap-y-4\"\n                data-testid=\"orders-wrapper\"\n              >\n                {orders && orders.length > 0 ? (\n                  orders.slice(0, 5).map((order) => {\n                    return (\n                      <li\n                        key={order.id}\n                        data-testid=\"order-wrapper\"\n                        data-value={order.id}\n                      >\n                        <LocalizedClientLink\n                          href={`/account/orders/details/${order.id}`}\n                        >\n                          <Container className=\"bg-gray-50 flex justify-between items-center p-4\">\n                            <div className=\"grid grid-cols-3 grid-rows-2 text-small-regular gap-x-4 flex-1\">\n                              <span className=\"font-semibold\">Date placed</span>\n                              <span className=\"font-semibold\">\n                                Order number\n                              </span>\n                              <span className=\"font-semibold\">\n                                Total amount\n                              </span>\n                              <span data-testid=\"order-created-date\">\n                                {new Date(order.created_at).toDateString()}\n                              </span>\n                              <span\n                                data-testid=\"order-id\"\n                                data-value={order.display_id}\n                              >\n                                #{order.display_id}\n                              </span>\n                              <span data-testid=\"order-amount\">\n                                {convertToLocale({\n                                  amount: order.total,\n                                  currency_code: order.currency_code,\n                                })}\n                              </span>\n                            </div>\n                            <button\n                              className=\"flex items-center justify-between\"\n                              data-testid=\"open-order-button\"\n                            >\n                              <span className=\"sr-only\">\n                                Go to order #{order.display_id}\n                              </span>\n                              <ChevronDown className=\"-rotate-90\" />\n                            </button>\n                          </Container>\n                        </LocalizedClientLink>\n                      </li>\n                    )\n                  })\n                ) : (\n                  <span data-testid=\"no-orders-message\">No recent orders</span>\n                )}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst getProfileCompletion = (customer: HttpTypes.StoreCustomer | null) => {\n  let count = 0\n\n  if (!customer) {\n    return 0\n  }\n\n  if (customer.email) {\n    count++\n  }\n\n  if (customer.first_name && customer.last_name) {\n    count++\n  }\n\n  if (customer.phone) {\n    count++\n  }\n\n  const billingAddress = customer.addresses?.find(\n    (addr) => addr.is_default_billing\n  )\n\n  if (billingAddress) {\n    count++\n  }\n\n  return (count / 4) * 100\n}\n\nexport default Overview\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/lib/data/orders.ts"],"sourcesContent":["\"use server\"\n\nimport { sdk } from \"@lib/config\"\nimport medusaError from \"@lib/util/medusa-error\"\nimport { getAuthHeaders, getCacheOptions } from \"./cookies\"\nimport { HttpTypes } from \"@medusajs/types\"\n\nexport const retrieveOrder = async (id: string) => {\n  const headers = {\n    ...(await getAuthHeaders()),\n  }\n\n  const next = {\n    ...(await getCacheOptions(\"orders\")),\n  }\n\n  return sdk.client\n    .fetch<HttpTypes.StoreOrderResponse>(`/store/orders/${id}`, {\n      method: \"GET\",\n      query: {\n        fields:\n          \"*payment_collections.payments,*items,*items.metadata,*items.variant,*items.product\",\n      },\n      headers,\n      next,\n      cache: \"force-cache\",\n    })\n    .then(({ order }) => order)\n    .catch((err) => medusaError(err))\n}\n\nexport const listOrders = async (\n  limit: number = 10,\n  offset: number = 0,\n  filters?: Record<string, any>\n) => {\n  const headers = {\n    ...(await getAuthHeaders()),\n  }\n\n  const next = {\n    ...(await getCacheOptions(\"orders\")),\n  }\n\n  return sdk.client\n    .fetch<HttpTypes.StoreOrderListResponse>(`/store/orders`, {\n      method: \"GET\",\n      query: {\n        limit,\n        offset,\n        order: \"-created_at\",\n        fields: \"*items,+items.metadata,*items.variant,*items.product\",\n        ...filters,\n      },\n      headers,\n      next,\n      cache: \"force-cache\",\n    })\n    .then(({ orders }) => orders)\n    .catch((err) => medusaError(err))\n}\n\nexport const createTransferRequest = async (\n  state: {\n    success: boolean\n    error: string | null\n    order: HttpTypes.StoreOrder | null\n  },\n  formData: FormData\n): Promise<{\n  success: boolean\n  error: string | null\n  order: HttpTypes.StoreOrder | null\n}> => {\n  const id = formData.get(\"order_id\") as string\n\n  if (!id) {\n    return { success: false, error: \"Order ID is required\", order: null }\n  }\n\n  const headers = await getAuthHeaders()\n\n  return await sdk.store.order\n    .requestTransfer(\n      id,\n      {},\n      {\n        fields: \"id, email\",\n      },\n      headers\n    )\n    .then(({ order }) => ({ success: true, error: null, order }))\n    .catch((err) => ({ success: false, error: err.message, order: null }))\n}\n\nexport const acceptTransferRequest = async (id: string, token: string) => {\n  const headers = await getAuthHeaders()\n\n  return await sdk.store.order\n    .acceptTransfer(id, { token }, {}, headers)\n    .then(({ order }) => ({ success: true, error: null, order }))\n    .catch((err) => ({ success: false, error: err.message, order: null }))\n}\n\nexport const declineTransferRequest = async (id: string, token: string) => {\n  const headers = await getAuthHeaders()\n\n  return await sdk.store.order\n    .declineTransfer(id, { token }, {}, headers)\n    .then(({ order }) => ({ success: true, error: null, order }))\n    .catch((err) => ({ success: false, error: err.message, order: null }))\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/app/%5BcountryCode%5D/%28main%29/account/%40dashboard/page.tsx"],"sourcesContent":["import { Metadata } from \"next\"\n\nimport Overview from \"@modules/account/components/overview\"\nimport { notFound } from \"next/navigation\"\nimport { retrieveCustomer } from \"@lib/data/customer\"\nimport { listOrders } from \"@lib/data/orders\"\n\nexport const metadata: Metadata = {\n  title: \"Account\",\n  description: \"Overview of your account activity.\",\n}\n\nexport default async function OverviewTemplate() {\n  const customer = await retrieveCustomer().catch(() => null)\n  const orders = (await listOrders().catch(() => null)) || null\n\n  if (!customer) {\n    notFound()\n  }\n\n  return <Overview customer={customer} orders={orders} />\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAFA;;;;;;AAIO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe;IAC5B,MAAM,WAAW,MAAM,CAAA,GAAA,8HAAA,CAAA,mBAAgB,AAAD,IAAI,KAAK,CAAC,IAAM;IACtD,MAAM,SAAS,AAAC,MAAM,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,IAAI,KAAK,CAAC,IAAM,SAAU;IAEzD,IAAI,CAAC,UAAU;QACb,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBAAO,8OAAC,6JAAA,CAAA,UAAQ;QAAC,UAAU;QAAU,QAAQ;;;;;;AAC/C"}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"file":"container.js","sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/node_modules/%40medusajs/ui/src/components/container/container.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\n\n/**\n * This component is based on the `div` element and supports all of its props\n */\nconst Container = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={clx(\n        \"shadow-elevation-card-rest bg-ui-bg-base w-full rounded-lg px-6 py-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nContainer.displayName = \"Container\"\n\nexport { Container }\n"],"names":[],"mappings":";;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;;;AAEjC;;GAEG,CACH,MAAM,SAAS,GAAG,KAAK,iMAAC,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE;IACjC,OAAO,AACL,sMAAA,aAAA,CAAA,OAAA;QACE,GAAG,EAAE,GAAG;QACR,SAAS,sKAAE,MAAA,AAAG,EACZ,sEAAsE,EACtE,SAAS,CACV;QAAA,GACG,KAAK;IAAA,EACT,CACH,CAAA;AACH,CAAC,CAAC,CAAA;AACF,SAAS,CAAC,WAAW,GAAG,WAAW,CAAA","ignoreList":[0]}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}