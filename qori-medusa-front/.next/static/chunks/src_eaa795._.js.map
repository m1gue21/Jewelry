{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/lib/data/customer.ts"],"sourcesContent":["\"use server\"\r\n\r\nimport { sdk } from \"@lib/config\"\r\nimport medusaError from \"@lib/util/medusa-error\"\r\nimport { HttpTypes } from \"@medusajs/types\"\r\nimport { revalidateTag } from \"next/cache\"\r\nimport { redirect } from \"next/navigation\"\r\nimport {\r\n  getAuthHeaders,\r\n  getCacheOptions,\r\n  getCacheTag,\r\n  getCartId,\r\n  removeAuthToken,\r\n  setAuthToken,\r\n} from \"./cookies\"\r\n\r\nexport const retrieveCustomer =\r\n  async (): Promise<HttpTypes.StoreCustomer | null> => {\r\n    const authHeaders = await getAuthHeaders()\r\n\r\n    if (!authHeaders) return null\r\n\r\n    const headers = {\r\n      ...authHeaders,\r\n    }\r\n\r\n    const next = {\r\n      ...(await getCacheOptions(\"customers\")),\r\n    }\r\n\r\n    return await sdk.client\r\n      .fetch<{ customer: HttpTypes.StoreCustomer }>(`/store/customers/me`, {\r\n        method: \"GET\",\r\n        query: {\r\n          fields: \"*orders\",\r\n        },\r\n        headers,\r\n        next,\r\n        cache: \"force-cache\",\r\n      })\r\n      .then(({ customer }) => customer)\r\n      .catch(() => null)\r\n  }\r\n\r\nexport const updateCustomer = async (body: HttpTypes.StoreUpdateCustomer) => {\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  const updateRes = await sdk.store.customer\r\n    .update(body, {}, headers)\r\n    .then(({ customer }) => customer)\r\n    .catch(medusaError)\r\n\r\n  const cacheTag = await getCacheTag(\"customers\")\r\n  revalidateTag(cacheTag)\r\n\r\n  return updateRes\r\n}\r\n\r\nexport async function signup(_currentState: unknown, formData: FormData) {\r\n  const password = formData.get(\"password\") as string\r\n  const customerForm = {\r\n    email: formData.get(\"email\") as string,\r\n    first_name: formData.get(\"first_name\") as string,\r\n    last_name: formData.get(\"last_name\") as string,\r\n    phone: formData.get(\"phone\") as string,\r\n  }\r\n\r\n  try {\r\n    const token = await sdk.auth.register(\"customer\", \"emailpass\", {\r\n      email: customerForm.email,\r\n      password: password,\r\n    })\r\n\r\n    await setAuthToken(token as string)\r\n\r\n    const headers = {\r\n      ...(await getAuthHeaders()),\r\n    }\r\n\r\n    const { customer: createdCustomer } = await sdk.store.customer.create(\r\n      customerForm,\r\n      {},\r\n      headers\r\n    )\r\n\r\n    const loginToken = await sdk.auth.login(\"customer\", \"emailpass\", {\r\n      email: customerForm.email,\r\n      password,\r\n    })\r\n\r\n    await setAuthToken(loginToken as string)\r\n\r\n    const customerCacheTag = await getCacheTag(\"customers\")\r\n    revalidateTag(customerCacheTag)\r\n\r\n    await transferCart()\r\n\r\n    return createdCustomer\r\n  } catch (error: any) {\r\n    return error.toString()\r\n  }\r\n}\r\n\r\nexport async function login(_currentState: unknown, formData: FormData) {\r\n  const email = formData.get(\"email\") as string\r\n  const password = formData.get(\"password\") as string\r\n\r\n  try {\r\n    await sdk.auth\r\n      .login(\"customer\", \"emailpass\", { email, password })\r\n      .then(async (token) => {\r\n        await setAuthToken(token as string)\r\n        const customerCacheTag = await getCacheTag(\"customers\")\r\n        revalidateTag(customerCacheTag)\r\n      })\r\n  } catch (error: any) {\r\n    return error.toString()\r\n  }\r\n\r\n  try {\r\n    await transferCart()\r\n  } catch (error: any) {\r\n    return error.toString()\r\n  }\r\n}\r\n\r\nexport async function signout(countryCode: string) {\r\n  await sdk.auth.logout()\r\n  removeAuthToken()\r\n  \r\n  const customerCacheTag = await getCacheTag(\"customers\")\r\n  revalidateTag(customerCacheTag)\r\n  \r\n  redirect(`/${countryCode}/account`)\r\n}\r\n\r\nexport async function transferCart() {\r\n  const cartId = await getCartId()\r\n\r\n  if (!cartId) {\r\n    return\r\n  }\r\n\r\n  const headers = await getAuthHeaders()\r\n\r\n  await sdk.store.cart.transferCart(cartId, {}, headers)\r\n\r\n  const cartCacheTag = await getCacheTag(\"carts\")\r\n  revalidateTag(cartCacheTag)\r\n}\r\n\r\nexport const addCustomerAddress = async (\r\n  currentState: Record<string, unknown>,\r\n  formData: FormData\r\n): Promise<any> => {\r\n  const isDefaultBilling = (currentState.isDefaultBilling as boolean) || false\r\n  const isDefaultShipping = (currentState.isDefaultShipping as boolean) || false\r\n\r\n  const address = {\r\n    first_name: formData.get(\"first_name\") as string,\r\n    last_name: formData.get(\"last_name\") as string,\r\n    company: formData.get(\"company\") as string,\r\n    address_1: formData.get(\"address_1\") as string,\r\n    address_2: formData.get(\"address_2\") as string,\r\n    city: formData.get(\"city\") as string,\r\n    postal_code: formData.get(\"postal_code\") as string,\r\n    province: formData.get(\"province\") as string,\r\n    country_code: formData.get(\"country_code\") as string,\r\n    phone: formData.get(\"phone\") as string,\r\n    is_default_billing: isDefaultBilling,\r\n    is_default_shipping: isDefaultShipping,\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  return sdk.store.customer\r\n    .createAddress(address, {}, headers)\r\n    .then(async ({ customer }) => {\r\n      const customerCacheTag = await getCacheTag(\"customers\")\r\n      revalidateTag(customerCacheTag)\r\n      return { success: true, error: null }\r\n    })\r\n    .catch((err) => {\r\n      return { success: false, error: err.toString() }\r\n    })\r\n}\r\n\r\nexport const deleteCustomerAddress = async (\r\n  addressId: string\r\n): Promise<void> => {\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  await sdk.store.customer\r\n    .deleteAddress(addressId, headers)\r\n    .then(async () => {\r\n      const customerCacheTag = await getCacheTag(\"customers\")\r\n      revalidateTag(customerCacheTag)\r\n      return { success: true, error: null }\r\n    })\r\n    .catch((err) => {\r\n      return { success: false, error: err.toString() }\r\n    })\r\n}\r\n\r\nexport const updateCustomerAddress = async (\r\n  currentState: Record<string, unknown>,\r\n  formData: FormData\r\n): Promise<any> => {\r\n  const addressId =\r\n    (currentState.addressId as string) || (formData.get(\"addressId\") as string)\r\n\r\n  if (!addressId) {\r\n    return { success: false, error: \"Address ID is required\" }\r\n  }\r\n\r\n  const address = {\r\n    first_name: formData.get(\"first_name\") as string,\r\n    last_name: formData.get(\"last_name\") as string,\r\n    company: formData.get(\"company\") as string,\r\n    address_1: formData.get(\"address_1\") as string,\r\n    address_2: formData.get(\"address_2\") as string,\r\n    city: formData.get(\"city\") as string,\r\n    postal_code: formData.get(\"postal_code\") as string,\r\n    province: formData.get(\"province\") as string,\r\n    country_code: formData.get(\"country_code\") as string,\r\n  } as HttpTypes.StoreUpdateCustomerAddress\r\n\r\n  const phone = formData.get(\"phone\") as string\r\n\r\n  if (phone) {\r\n    address.phone = phone\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  return sdk.store.customer\r\n    .updateAddress(addressId, address, {}, headers)\r\n    .then(async () => {\r\n      const customerCacheTag = await getCacheTag(\"customers\")\r\n      revalidateTag(customerCacheTag)\r\n      return { success: true, error: null }\r\n    })\r\n    .catch((err) => {\r\n      return { success: false, error: err.toString() }\r\n    })\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;IAgBa;IA4BA;IAgBS;IA6CA;IAuBA;IAUA;IAeT;IAsCA;IAmBA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/layout/components/cart-mismatch-banner/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { transferCart } from \"@lib/data/customer\"\r\nimport { ExclamationCircleSolid } from \"@medusajs/icons\"\r\nimport { StoreCart, StoreCustomer } from \"@medusajs/types\"\r\nimport { Button } from \"@medusajs/ui\"\r\nimport { useState } from \"react\"\r\n\r\nfunction CartMismatchBanner(props: {\r\n  customer: StoreCustomer\r\n  cart: StoreCart\r\n}) {\r\n  const { customer, cart } = props\r\n  const [isPending, setIsPending] = useState(false)\r\n  const [actionText, setActionText] = useState(\"Run transfer again\")\r\n\r\n  if (!customer || !!cart.customer_id) {\r\n    return\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setIsPending(true)\r\n      setActionText(\"Transferring..\")\r\n\r\n      await transferCart()\r\n    } catch {\r\n      setActionText(\"Run transfer again\")\r\n      setIsPending(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center small:p-4 p-2 text-center bg-orange-300 small:gap-2 gap-1 text-sm mt-2 text-orange-800\">\r\n      <div className=\"flex flex-col small:flex-row small:gap-2 gap-1 items-center\">\r\n        <span className=\"flex items-center gap-1\">\r\n          <ExclamationCircleSolid className=\"inline\" />\r\n          Something went wrong when we tried to transfer your cart\r\n        </span>\r\n\r\n        <span>Â·</span>\r\n\r\n        <Button\r\n          variant=\"transparent\"\r\n          className=\"hover:bg-transparent active:bg-transparent focus:bg-transparent disabled:text-orange-500 text-orange-950 p-0 bg-transparent\"\r\n          size=\"base\"\r\n          disabled={isPending}\r\n          onClick={handleSubmit}\r\n        >\r\n          {actionText}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartMismatchBanner\r\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AAEA;;;AALA;;;;;AAQA,SAAS,mBAAmB,KAG3B;;IACC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,WAAW,EAAE;QACnC;IACF;IAEA,MAAM,eAAe;QACnB,IAAI;YACF,aAAa;YACb,cAAc;YAEd,MAAM,CAAA,GAAA,iIAAA,CAAA,eAAY,AAAD;QACnB,EAAE,OAAM;YACN,cAAc;YACd,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;;sCACd,6LAAC,4OAAA,CAAA,yBAAsB;4BAAC,WAAU;;;;;;wBAAW;;;;;;;8BAI/C,6LAAC;8BAAK;;;;;;8BAEN,6LAAC,oLAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,WAAU;oBACV,MAAK;oBACL,UAAU;oBACV,SAAS;8BAER;;;;;;;;;;;;;;;;;AAKX;GA9CS;KAAA;uCAgDM"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/common/components/localized-client-link/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport Link from \"next/link\"\r\nimport { useParams } from \"next/navigation\"\r\nimport React from \"react\"\r\n\r\n/**\r\n * Use this component to create a Next.js `<Link />` that persists the current country code in the url,\r\n * without having to explicitly pass it as a prop.\r\n */\r\nconst LocalizedClientLink = ({\r\n  children,\r\n  href,\r\n  ...props\r\n}: {\r\n  children?: React.ReactNode\r\n  href: string\r\n  className?: string\r\n  onClick?: () => void\r\n  passHref?: true\r\n  [x: string]: any\r\n}) => {\r\n  const { countryCode } = useParams()\r\n\r\n  return (\r\n    <Link href={`/${countryCode}${href}`} {...props}>\r\n      {children}\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default LocalizedClientLink\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAMA;;;CAGC,GACD,MAAM,sBAAsB,CAAC,EAC3B,QAAQ,EACR,IAAI,EACJ,GAAG,OAQJ;;IACC,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEhC,qBACE,6LAAC,+HAAA,CAAA,UAAI;QAAC,MAAM,CAAC,CAAC,EAAE,cAAc,MAAM;QAAG,GAAG,KAAK;kBAC5C;;;;;;AAGP;GAnBM;;QAYoB,qIAAA,CAAA,YAAS;;;KAZ7B;uCAqBS"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/lib/util/isEmpty.ts"],"sourcesContent":["export const isObject = (input: any) => input instanceof Object\r\nexport const isArray = (input: any) => Array.isArray(input)\r\nexport const isEmpty = (input: any) => {\r\n  return (\r\n    input === null ||\r\n    input === undefined ||\r\n    (isObject(input) && Object.keys(input).length === 0) ||\r\n    (isArray(input) && (input as any[]).length === 0) ||\r\n    (typeof input === \"string\" && input.trim().length === 0)\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAAO,MAAM,WAAW,CAAC,QAAe,iBAAiB;AAClD,MAAM,UAAU,CAAC,QAAe,MAAM,OAAO,CAAC;AAC9C,MAAM,UAAU,CAAC;IACtB,OACE,UAAU,QACV,UAAU,aACT,SAAS,UAAU,OAAO,IAAI,CAAC,OAAO,MAAM,KAAK,KACjD,QAAQ,UAAU,AAAC,MAAgB,MAAM,KAAK,KAC9C,OAAO,UAAU,YAAY,MAAM,IAAI,GAAG,MAAM,KAAK;AAE1D"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/lib/util/money.ts"],"sourcesContent":["import { isEmpty } from \"./isEmpty\"\r\n\r\ntype ConvertToLocaleParams = {\r\n  amount: number\r\n  currency_code: string\r\n  minimumFractionDigits?: number\r\n  maximumFractionDigits?: number\r\n  locale?: string\r\n}\r\n\r\nexport const convertToLocale = ({\r\n  amount,\r\n  currency_code,\r\n  minimumFractionDigits,\r\n  maximumFractionDigits,\r\n  locale = \"en-US\",\r\n}: ConvertToLocaleParams) => {\r\n  return currency_code && !isEmpty(currency_code)\r\n    ? new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: currency_code,\r\n        minimumFractionDigits,\r\n        maximumFractionDigits,\r\n      }).format(amount)\r\n    : amount.toString()\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAUO,MAAM,kBAAkB,CAAC,EAC9B,MAAM,EACN,aAAa,EACb,qBAAqB,EACrB,qBAAqB,EACrB,SAAS,OAAO,EACM;IACtB,OAAO,iBAAiB,CAAC,CAAA,GAAA,gIAAA,CAAA,UAAO,AAAD,EAAE,iBAC7B,IAAI,KAAK,YAAY,CAAC,QAAQ;QAC5B,OAAO;QACP,UAAU;QACV;QACA;IACF,GAAG,MAAM,CAAC,UACV,OAAO,QAAQ;AACrB"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/lib/data/cart.ts"],"sourcesContent":["\"use server\"\r\n\r\nimport { sdk } from \"@lib/config\"\r\nimport medusaError from \"@lib/util/medusa-error\"\r\nimport { HttpTypes } from \"@medusajs/types\"\r\nimport { revalidateTag } from \"next/cache\"\r\nimport { redirect } from \"next/navigation\"\r\nimport {\r\n  getAuthHeaders,\r\n  getCacheOptions,\r\n  getCacheTag,\r\n  getCartId,\r\n  removeCartId,\r\n  setCartId,\r\n} from \"./cookies\"\r\nimport { getRegion } from \"./regions\"\r\n\r\n/**\r\n * Retrieves a cart by its ID. If no ID is provided, it will use the cart ID from the cookies.\r\n * @param cartId - optional - The ID of the cart to retrieve.\r\n * @returns The cart object if found, or null if not found.\r\n */\r\nexport async function retrieveCart(cartId?: string) {\r\n  const id = cartId || (await getCartId())\r\n\r\n  if (!id) {\r\n    return null\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  const next = {\r\n    ...(await getCacheOptions(\"carts\")),\r\n  }\r\n\r\n  return await sdk.client\r\n    .fetch<HttpTypes.StoreCartResponse>(`/store/carts/${id}`, {\r\n      method: \"GET\",\r\n      query: {\r\n        fields:\r\n          \"*items, *region, *items.product, *items.variant, *items.thumbnail, *items.metadata, +items.total, *promotions, +shipping_methods.name\",\r\n      },\r\n      headers,\r\n      next,\r\n      cache: \"force-cache\",\r\n    })\r\n    .then(({ cart }) => cart)\r\n    .catch(() => null)\r\n}\r\n\r\nexport async function getOrSetCart(countryCode: string) {\r\n  const region = await getRegion(countryCode)\r\n\r\n  if (!region) {\r\n    throw new Error(`Region not found for country code: ${countryCode}`)\r\n  }\r\n\r\n  let cart = await retrieveCart()\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  if (!cart) {\r\n    const cartResp = await sdk.store.cart.create(\r\n      { region_id: region.id },\r\n      {},\r\n      headers\r\n    )\r\n    cart = cartResp.cart\r\n\r\n    await setCartId(cart.id)\r\n\r\n    const cartCacheTag = await getCacheTag(\"carts\")\r\n    revalidateTag(cartCacheTag)\r\n  }\r\n\r\n  if (cart && cart?.region_id !== region.id) {\r\n    await sdk.store.cart.update(cart.id, { region_id: region.id }, {}, headers)\r\n    const cartCacheTag = await getCacheTag(\"carts\")\r\n    revalidateTag(cartCacheTag)\r\n  }\r\n\r\n  return cart\r\n}\r\n\r\nexport async function updateCart(data: HttpTypes.StoreUpdateCart) {\r\n  const cartId = await getCartId()\r\n\r\n  if (!cartId) {\r\n    throw new Error(\"No existing cart found, please create one before updating\")\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  return sdk.store.cart\r\n    .update(cartId, data, {}, headers)\r\n    .then(async ({ cart }) => {\r\n      const cartCacheTag = await getCacheTag(\"carts\")\r\n      revalidateTag(cartCacheTag)\r\n\r\n      const fulfillmentCacheTag = await getCacheTag(\"fulfillment\")\r\n      revalidateTag(fulfillmentCacheTag)\r\n\r\n      return cart\r\n    })\r\n    .catch(medusaError)\r\n}\r\n\r\nexport async function addToCart({\r\n  variantId,\r\n  quantity,\r\n  countryCode,\r\n}: {\r\n  variantId: string\r\n  quantity: number\r\n  countryCode: string\r\n}) {\r\n  if (!variantId) {\r\n    throw new Error(\"Missing variant ID when adding to cart\")\r\n  }\r\n\r\n  const cart = await getOrSetCart(countryCode)\r\n\r\n  if (!cart) {\r\n    throw new Error(\"Error retrieving or creating cart\")\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  await sdk.store.cart\r\n    .createLineItem(\r\n      cart.id,\r\n      {\r\n        variant_id: variantId,\r\n        quantity,\r\n      },\r\n      {},\r\n      headers\r\n    )\r\n    .then(async () => {\r\n      const cartCacheTag = await getCacheTag(\"carts\")\r\n      revalidateTag(cartCacheTag)\r\n\r\n      const fulfillmentCacheTag = await getCacheTag(\"fulfillment\")\r\n      revalidateTag(fulfillmentCacheTag)\r\n    })\r\n    .catch(medusaError)\r\n}\r\n\r\nexport async function updateLineItem({\r\n  lineId,\r\n  quantity,\r\n}: {\r\n  lineId: string\r\n  quantity: number\r\n}) {\r\n  if (!lineId) {\r\n    throw new Error(\"Missing lineItem ID when updating line item\")\r\n  }\r\n\r\n  const cartId = await getCartId()\r\n\r\n  if (!cartId) {\r\n    throw new Error(\"Missing cart ID when updating line item\")\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  await sdk.store.cart\r\n    .updateLineItem(cartId, lineId, { quantity }, {}, headers)\r\n    .then(async () => {\r\n      const cartCacheTag = await getCacheTag(\"carts\")\r\n      revalidateTag(cartCacheTag)\r\n\r\n      const fulfillmentCacheTag = await getCacheTag(\"fulfillment\")\r\n      revalidateTag(fulfillmentCacheTag)\r\n    })\r\n    .catch(medusaError)\r\n}\r\n\r\nexport async function deleteLineItem(lineId: string) {\r\n  if (!lineId) {\r\n    throw new Error(\"Missing lineItem ID when deleting line item\")\r\n  }\r\n\r\n  const cartId = await getCartId()\r\n\r\n  if (!cartId) {\r\n    throw new Error(\"Missing cart ID when deleting line item\")\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  await sdk.store.cart\r\n    .deleteLineItem(cartId, lineId, headers)\r\n    .then(async () => {\r\n      const cartCacheTag = await getCacheTag(\"carts\")\r\n      revalidateTag(cartCacheTag)\r\n\r\n      const fulfillmentCacheTag = await getCacheTag(\"fulfillment\")\r\n      revalidateTag(fulfillmentCacheTag)\r\n    })\r\n    .catch(medusaError)\r\n}\r\n\r\nexport async function setShippingMethod({\r\n  cartId,\r\n  shippingMethodId,\r\n}: {\r\n  cartId: string\r\n  shippingMethodId: string\r\n}) {\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  return sdk.store.cart\r\n    .addShippingMethod(cartId, { option_id: shippingMethodId }, {}, headers)\r\n    .then(async () => {\r\n      const cartCacheTag = await getCacheTag(\"carts\")\r\n      revalidateTag(cartCacheTag)\r\n    })\r\n    .catch(medusaError)\r\n}\r\n\r\nexport async function initiatePaymentSession(\r\n  cart: HttpTypes.StoreCart,\r\n  data: HttpTypes.StoreInitializePaymentSession\r\n) {\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  return sdk.store.payment\r\n    .initiatePaymentSession(cart, data, {}, headers)\r\n    .then(async (resp) => {\r\n      const cartCacheTag = await getCacheTag(\"carts\")\r\n      revalidateTag(cartCacheTag)\r\n      return resp\r\n    })\r\n    .catch(medusaError)\r\n}\r\n\r\nexport async function applyPromotions(codes: string[]) {\r\n  const cartId = await getCartId()\r\n\r\n  if (!cartId) {\r\n    throw new Error(\"No existing cart found\")\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  return sdk.store.cart\r\n    .update(cartId, { promo_codes: codes }, {}, headers)\r\n    .then(async () => {\r\n      const cartCacheTag = await getCacheTag(\"carts\")\r\n      revalidateTag(cartCacheTag)\r\n\r\n      const fulfillmentCacheTag = await getCacheTag(\"fulfillment\")\r\n      revalidateTag(fulfillmentCacheTag)\r\n    })\r\n    .catch(medusaError)\r\n}\r\n\r\nexport async function applyGiftCard(code: string) {\r\n  //   const cartId = getCartId()\r\n  //   if (!cartId) return \"No cartId cookie found\"\r\n  //   try {\r\n  //     await updateCart(cartId, { gift_cards: [{ code }] }).then(() => {\r\n  //       revalidateTag(\"cart\")\r\n  //     })\r\n  //   } catch (error: any) {\r\n  //     throw error\r\n  //   }\r\n}\r\n\r\nexport async function removeDiscount(code: string) {\r\n  // const cartId = getCartId()\r\n  // if (!cartId) return \"No cartId cookie found\"\r\n  // try {\r\n  //   await deleteDiscount(cartId, code)\r\n  //   revalidateTag(\"cart\")\r\n  // } catch (error: any) {\r\n  //   throw error\r\n  // }\r\n}\r\n\r\nexport async function removeGiftCard(\r\n  codeToRemove: string,\r\n  giftCards: any[]\r\n  // giftCards: GiftCard[]\r\n) {\r\n  //   const cartId = getCartId()\r\n  //   if (!cartId) return \"No cartId cookie found\"\r\n  //   try {\r\n  //     await updateCart(cartId, {\r\n  //       gift_cards: [...giftCards]\r\n  //         .filter((gc) => gc.code !== codeToRemove)\r\n  //         .map((gc) => ({ code: gc.code })),\r\n  //     }).then(() => {\r\n  //       revalidateTag(\"cart\")\r\n  //     })\r\n  //   } catch (error: any) {\r\n  //     throw error\r\n  //   }\r\n}\r\n\r\nexport async function submitPromotionForm(\r\n  currentState: unknown,\r\n  formData: FormData\r\n) {\r\n  const code = formData.get(\"code\") as string\r\n  try {\r\n    await applyPromotions([code])\r\n  } catch (e: any) {\r\n    return e.message\r\n  }\r\n}\r\n\r\n// TODO: Pass a POJO instead of a form entity here\r\nexport async function setAddresses(currentState: unknown, formData: FormData) {\r\n  try {\r\n    if (!formData) {\r\n      throw new Error(\"No form data found when setting addresses\")\r\n    }\r\n    const cartId = getCartId()\r\n    if (!cartId) {\r\n      throw new Error(\"No existing cart found when setting addresses\")\r\n    }\r\n\r\n    const data = {\r\n      shipping_address: {\r\n        first_name: formData.get(\"shipping_address.first_name\"),\r\n        last_name: formData.get(\"shipping_address.last_name\"),\r\n        address_1: formData.get(\"shipping_address.address_1\"),\r\n        address_2: \"\",\r\n        company: formData.get(\"shipping_address.company\"),\r\n        postal_code: formData.get(\"shipping_address.postal_code\"),\r\n        city: formData.get(\"shipping_address.city\"),\r\n        country_code: formData.get(\"shipping_address.country_code\"),\r\n        province: formData.get(\"shipping_address.province\"),\r\n        phone: formData.get(\"shipping_address.phone\"),\r\n      },\r\n      email: formData.get(\"email\"),\r\n    } as any\r\n\r\n    const sameAsBilling = formData.get(\"same_as_billing\")\r\n    if (sameAsBilling === \"on\") data.billing_address = data.shipping_address\r\n\r\n    if (sameAsBilling !== \"on\")\r\n      data.billing_address = {\r\n        first_name: formData.get(\"billing_address.first_name\"),\r\n        last_name: formData.get(\"billing_address.last_name\"),\r\n        address_1: formData.get(\"billing_address.address_1\"),\r\n        address_2: \"\",\r\n        company: formData.get(\"billing_address.company\"),\r\n        postal_code: formData.get(\"billing_address.postal_code\"),\r\n        city: formData.get(\"billing_address.city\"),\r\n        country_code: formData.get(\"billing_address.country_code\"),\r\n        province: formData.get(\"billing_address.province\"),\r\n        phone: formData.get(\"billing_address.phone\"),\r\n      }\r\n    await updateCart(data)\r\n  } catch (e: any) {\r\n    return e.message\r\n  }\r\n\r\n  redirect(\r\n    `/${formData.get(\"shipping_address.country_code\")}/checkout?step=delivery`\r\n  )\r\n}\r\n\r\n/**\r\n * Places an order for a cart. If no cart ID is provided, it will use the cart ID from the cookies.\r\n * @param cartId - optional - The ID of the cart to place an order for.\r\n * @returns The cart object if the order was successful, or null if not.\r\n */\r\nexport async function placeOrder(cartId?: string) {\r\n  const id = cartId || (await getCartId())\r\n\r\n  if (!id) {\r\n    throw new Error(\"No existing cart found when placing an order\")\r\n  }\r\n\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n\r\n  const cartRes = await sdk.store.cart\r\n    .complete(id, {}, headers)\r\n    .then(async (cartRes) => {\r\n      const cartCacheTag = await getCacheTag(\"carts\")\r\n      revalidateTag(cartCacheTag)\r\n      return cartRes\r\n    })\r\n    .catch(medusaError)\r\n\r\n  if (cartRes?.type === \"order\") {\r\n    const countryCode =\r\n      cartRes.order.shipping_address?.country_code?.toLowerCase()\r\n    removeCartId()\r\n    redirect(`/${countryCode}/order/${cartRes?.order.id}/confirmed`)\r\n  }\r\n\r\n  return cartRes.cart\r\n}\r\n\r\n/**\r\n * Updates the countrycode param and revalidates the regions cache\r\n * @param regionId\r\n * @param countryCode\r\n */\r\nexport async function updateRegion(countryCode: string, currentPath: string) {\r\n  const cartId = await getCartId()\r\n  const region = await getRegion(countryCode)\r\n\r\n  if (!region) {\r\n    throw new Error(`Region not found for country code: ${countryCode}`)\r\n  }\r\n\r\n  if (cartId) {\r\n    await updateCart({ region_id: region.id })\r\n    const cartCacheTag = await getCacheTag(\"carts\")\r\n    revalidateTag(cartCacheTag)\r\n  }\r\n\r\n  const regionCacheTag = await getCacheTag(\"regions\")\r\n  revalidateTag(regionCacheTag)\r\n\r\n  const productsCacheTag = await getCacheTag(\"products\")\r\n  revalidateTag(productsCacheTag)\r\n\r\n  redirect(`/${countryCode}${currentPath}`)\r\n}\r\n\r\nexport async function listCartOptions() {\r\n  const cartId = await getCartId()\r\n  const headers = {\r\n    ...(await getAuthHeaders()),\r\n  }\r\n  const next = {\r\n    ...(await getCacheOptions(\"shippingOptions\")),\r\n  }\r\n\r\n  return await sdk.client.fetch<{\r\n    shipping_options: HttpTypes.StoreCartShippingOption[]\r\n  }>(\"/store/shipping-options\", {\r\n    query: { cart_id: cartId },\r\n    next,\r\n    headers,\r\n    cache: \"force-cache\",\r\n  })\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;IAsBsB;IA8BA;IAoCA;IAyBA;IA2CA;IAiCA;IA2BA;IAoBA;IAkBA;IAuBA;IAYA;IAWA;IAoBA;IAaA;IAyDA;IAmCA;IAuBA"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/common/components/delete-button/index.tsx"],"sourcesContent":["import { deleteLineItem } from \"@lib/data/cart\"\r\nimport { Spinner, Trash } from \"@medusajs/icons\"\r\nimport { clx } from \"@medusajs/ui\"\r\nimport { useState } from \"react\"\r\n\r\nconst DeleteButton = ({\r\n  id,\r\n  children,\r\n  className,\r\n}: {\r\n  id: string\r\n  children?: React.ReactNode\r\n  className?: string\r\n}) => {\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n  const handleDelete = async (id: string) => {\r\n    setIsDeleting(true)\r\n    await deleteLineItem(id).catch((err) => {\r\n      setIsDeleting(false)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={clx(\r\n        \"flex items-center justify-between text-small-regular\",\r\n        className\r\n      )}\r\n    >\r\n      <button\r\n        className=\"flex gap-x-1 text-ui-fg-subtle hover:text-ui-fg-base cursor-pointer\"\r\n        onClick={() => handleDelete(id)}\r\n      >\r\n        {isDeleting ? <Spinner className=\"animate-spin\" /> : <Trash />}\r\n        <span>{children}</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteButton\r\n"],"names":[],"mappings":";;;;AAAA;AAGA;AADA;AADA;AAAA;;;;;;;AAIA,MAAM,eAAe,CAAC,EACpB,EAAE,EACF,QAAQ,EACR,SAAS,EAKV;;IACC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,eAAe,OAAO;QAC1B,cAAc;QACd,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,KAAK,CAAC,CAAC;YAC9B,cAAc;QAChB;IACF;IAEA,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EACX,wDACA;kBAGF,cAAA,6LAAC;YACC,WAAU;YACV,SAAS,IAAM,aAAa;;gBAE3B,2BAAa,6LAAC,sMAAA,CAAA,UAAO;oBAAC,WAAU;;;;;yCAAoB,6LAAC,kMAAA,CAAA,QAAK;;;;;8BAC3D,6LAAC;8BAAM;;;;;;;;;;;;;;;;;AAIf;GAlCM;KAAA;uCAoCS"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/common/components/line-item-options/index.tsx"],"sourcesContent":["import { HttpTypes } from \"@medusajs/types\"\r\nimport { Text } from \"@medusajs/ui\"\r\n\r\ntype LineItemOptionsProps = {\r\n  variant: HttpTypes.StoreProductVariant | undefined\r\n  \"data-testid\"?: string\r\n  \"data-value\"?: HttpTypes.StoreProductVariant\r\n}\r\n\r\nconst LineItemOptions = ({\r\n  variant,\r\n  \"data-testid\": dataTestid,\r\n  \"data-value\": dataValue,\r\n}: LineItemOptionsProps) => {\r\n  return (\r\n    <Text\r\n      data-testid={dataTestid}\r\n      data-value={dataValue}\r\n      className=\"inline-block txt-medium text-ui-fg-subtle w-full overflow-hidden text-ellipsis\"\r\n    >\r\n      Variant: {variant?.title}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default LineItemOptions\r\n"],"names":[],"mappings":";;;;AACA;;;AAQA,MAAM,kBAAkB,CAAC,EACvB,OAAO,EACP,eAAe,UAAU,EACzB,cAAc,SAAS,EACF;IACrB,qBACE,6LAAC,gLAAA,CAAA,OAAI;QACH,eAAa;QACb,cAAY;QACZ,WAAU;;YACX;YACW,SAAS;;;;;;;AAGzB;KAdM;uCAgBS"}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/lib/util/get-precentage-diff.ts"],"sourcesContent":["export const getPercentageDiff = (original: number, calculated: number) => {\r\n  const diff = original - calculated\r\n  const decrease = (diff / original) * 100\r\n\r\n  return decrease.toFixed()\r\n}\r\n"],"names":[],"mappings":";;;AAAO,MAAM,oBAAoB,CAAC,UAAkB;IAClD,MAAM,OAAO,WAAW;IACxB,MAAM,WAAW,AAAC,OAAO,WAAY;IAErC,OAAO,SAAS,OAAO;AACzB"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/common/components/line-item-price/index.tsx"],"sourcesContent":["import { getPercentageDiff } from \"@lib/util/get-precentage-diff\"\r\nimport { convertToLocale } from \"@lib/util/money\"\r\nimport { HttpTypes } from \"@medusajs/types\"\r\nimport { clx } from \"@medusajs/ui\"\r\n\r\ntype LineItemPriceProps = {\r\n  item: HttpTypes.StoreCartLineItem | HttpTypes.StoreOrderLineItem\r\n  style?: \"default\" | \"tight\"\r\n  currencyCode: string\r\n}\r\n\r\nconst LineItemPrice = ({\r\n  item,\r\n  style = \"default\",\r\n  currencyCode,\r\n}: LineItemPriceProps) => {\r\n  const { total, original_total } = item\r\n  const originalPrice = original_total\r\n  const currentPrice = total\r\n  const hasReducedPrice = currentPrice < originalPrice\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-x-2 text-ui-fg-subtle items-end\">\r\n      <div className=\"text-left\">\r\n        {hasReducedPrice && (\r\n          <>\r\n            <p>\r\n              {style === \"default\" && (\r\n                <span className=\"text-ui-fg-subtle\">Original: </span>\r\n              )}\r\n              <span\r\n                className=\" text-ui-fg-muted\"\r\n                data-testid=\"product-original-price\"\r\n              >\r\n                {convertToLocale({\r\n                  amount: originalPrice,\r\n                  currency_code: currencyCode,\r\n                })}\r\n              </span>\r\n            </p>\r\n            {style === \"default\" && (\r\n              <span className=\"text-ui-fg-interactive\">\r\n                -{getPercentageDiff(originalPrice, currentPrice || 0)}%\r\n              </span>\r\n            )}\r\n          </>\r\n        )}\r\n        <span\r\n          className={clx(\"text-base-regular\", {\r\n            \"text-ui-fg-interactive\": hasReducedPrice,\r\n          })}\r\n          data-testid=\"product-price\"\r\n        >\r\n          {convertToLocale({\r\n            amount: currentPrice,\r\n            currency_code: currencyCode,\r\n          })}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineItemPrice\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;AAQA,MAAM,gBAAgB,CAAC,EACrB,IAAI,EACJ,QAAQ,SAAS,EACjB,YAAY,EACO;IACnB,MAAM,EAAE,KAAK,EAAE,cAAc,EAAE,GAAG;IAClC,MAAM,gBAAgB;IACtB,MAAM,eAAe;IACrB,MAAM,kBAAkB,eAAe;IAEvC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;gBACZ,iCACC;;sCACE,6LAAC;;gCACE,UAAU,2BACT,6LAAC;oCAAK,WAAU;8CAAoB;;;;;;8CAEtC,6LAAC;oCACC,WAAU;oCACV,eAAY;8CAEX,CAAA,GAAA,8HAAA,CAAA,kBAAe,AAAD,EAAE;wCACf,QAAQ;wCACR,eAAe;oCACjB;;;;;;;;;;;;wBAGH,UAAU,2BACT,6LAAC;4BAAK,WAAU;;gCAAyB;gCACrC,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE,eAAe,gBAAgB;gCAAG;;;;;;;;;8BAK9D,6LAAC;oBACC,WAAW,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EAAE,qBAAqB;wBAClC,0BAA0B;oBAC5B;oBACA,eAAY;8BAEX,CAAA,GAAA,8HAAA,CAAA,kBAAe,AAAD,EAAE;wBACf,QAAQ;wBACR,eAAe;oBACjB;;;;;;;;;;;;;;;;;AAKV;KAlDM;uCAoDS"}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/common/icons/placeholder-image.tsx"],"sourcesContent":["import React from \"react\"\r\n\r\nimport { IconProps } from \"types/icon\"\r\n\r\nconst PlaceholderImage: React.FC<IconProps> = ({\r\n  size = \"20\",\r\n  color = \"currentColor\",\r\n  ...attributes\r\n}) => {\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...attributes}\r\n    >\r\n      <path\r\n        d=\"M15.3141 3.16699H4.68453C3.84588 3.16699 3.16602 3.84685 3.16602 4.6855V15.3151C3.16602 16.1537 3.84588 16.8336 4.68453 16.8336H15.3141C16.1527 16.8336 16.8326 16.1537 16.8326 15.3151V4.6855C16.8326 3.84685 16.1527 3.16699 15.3141 3.16699Z\"\r\n        stroke={color}\r\n        strokeWidth=\"1.53749\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M7.91699 9.16699C8.60735 9.16699 9.16699 8.60735 9.16699 7.91699C9.16699 7.22664 8.60735 6.66699 7.91699 6.66699C7.22664 6.66699 6.66699 7.22664 6.66699 7.91699C6.66699 8.60735 7.22664 9.16699 7.91699 9.16699Z\"\r\n        stroke={color}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M16.6667 12.5756L13.0208 9.1665L5 16.6665\"\r\n        stroke={color}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default PlaceholderImage\r\n"],"names":[],"mappings":";;;;;AAIA,MAAM,mBAAwC,CAAC,EAC7C,OAAO,IAAI,EACX,QAAQ,cAAc,EACtB,GAAG,YACJ;IACC,qBACE,6LAAC;QACC,OAAO;QACP,QAAQ;QACR,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,UAAU;;0BAEd,6LAAC;gBACC,GAAE;gBACF,QAAQ;gBACR,aAAY;gBACZ,eAAc;gBACd,gBAAe;;;;;;0BAEjB,6LAAC;gBACC,GAAE;gBACF,QAAQ;gBACR,aAAY;gBACZ,eAAc;gBACd,gBAAe;;;;;;0BAEjB,6LAAC;gBACC,GAAE;gBACF,QAAQ;gBACR,aAAY;gBACZ,eAAc;gBACd,gBAAe;;;;;;;;;;;;AAIvB;KArCM;uCAuCS"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/products/components/thumbnail/index.tsx"],"sourcesContent":["import { Container, clx } from \"@medusajs/ui\"\r\nimport Image from \"next/image\"\r\nimport React from \"react\"\r\n\r\nimport PlaceholderImage from \"@modules/common/icons/placeholder-image\"\r\n\r\ntype ThumbnailProps = {\r\n  thumbnail?: string | null\r\n  // TODO: Fix image typings\r\n  images?: any[] | null\r\n  size?: \"small\" | \"medium\" | \"large\" | \"full\" | \"square\"\r\n  isFeatured?: boolean\r\n  className?: string\r\n  \"data-testid\"?: string\r\n}\r\n\r\nconst Thumbnail: React.FC<ThumbnailProps> = ({\r\n  thumbnail,\r\n  images,\r\n  size = \"small\",\r\n  isFeatured,\r\n  className,\r\n  \"data-testid\": dataTestid,\r\n}) => {\r\n  const initialImage = thumbnail || images?.[0]?.url\r\n\r\n  return (\r\n    <Container\r\n      className={clx(\r\n        \"relative w-full overflow-hidden p-4 bg-ui-bg-subtle shadow-elevation-card-rest rounded-large group-hover:shadow-elevation-card-hover transition-shadow ease-in-out duration-150\",\r\n        className,\r\n        {\r\n          \"aspect-[11/14]\": isFeatured,\r\n          \"aspect-[9/16]\": !isFeatured && size !== \"square\",\r\n          \"aspect-[1/1]\": size === \"square\",\r\n          \"w-[180px]\": size === \"small\",\r\n          \"w-[290px]\": size === \"medium\",\r\n          \"w-[440px]\": size === \"large\",\r\n          \"w-full\": size === \"full\",\r\n        }\r\n      )}\r\n      data-testid={dataTestid}\r\n    >\r\n      <ImageOrPlaceholder image={initialImage} size={size} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst ImageOrPlaceholder = ({\r\n  image,\r\n  size,\r\n}: Pick<ThumbnailProps, \"size\"> & { image?: string }) => {\r\n  return image ? (\r\n    <Image\r\n      src={image}\r\n      alt=\"Thumbnail\"\r\n      className=\"absolute inset-0 object-cover object-center\"\r\n      draggable={false}\r\n      quality={50}\r\n      sizes=\"(max-width: 576px) 280px, (max-width: 768px) 360px, (max-width: 992px) 480px, 800px\"\r\n      fill\r\n    />\r\n  ) : (\r\n    <div className=\"w-full h-full absolute inset-0 flex items-center justify-center\">\r\n      <PlaceholderImage size={size === \"small\" ? 16 : 24} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Thumbnail\r\n"],"names":[],"mappings":";;;;AACA;AAGA;AAJA;AAAA;;;;;AAgBA,MAAM,YAAsC,CAAC,EAC3C,SAAS,EACT,MAAM,EACN,OAAO,OAAO,EACd,UAAU,EACV,SAAS,EACT,eAAe,UAAU,EAC1B;IACC,MAAM,eAAe,aAAa,QAAQ,CAAC,EAAE,EAAE;IAE/C,qBACE,6LAAC,0LAAA,CAAA,YAAS;QACR,WAAW,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EACX,mLACA,WACA;YACE,kBAAkB;YAClB,iBAAiB,CAAC,cAAc,SAAS;YACzC,gBAAgB,SAAS;YACzB,aAAa,SAAS;YACtB,aAAa,SAAS;YACtB,aAAa,SAAS;YACtB,UAAU,SAAS;QACrB;QAEF,eAAa;kBAEb,cAAA,6LAAC;YAAmB,OAAO;YAAc,MAAM;;;;;;;;;;;AAGrD;KA9BM;AAgCN,MAAM,qBAAqB,CAAC,EAC1B,KAAK,EACL,IAAI,EAC8C;IAClD,OAAO,sBACL,6LAAC,gIAAA,CAAA,UAAK;QACJ,KAAK;QACL,KAAI;QACJ,WAAU;QACV,WAAW;QACX,SAAS;QACT,OAAM;QACN,IAAI;;;;;6BAGN,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,6JAAA,CAAA,UAAgB;YAAC,MAAM,SAAS,UAAU,KAAK;;;;;;;;;;;AAGtD;MAnBM;uCAqBS"}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/layout/components/cart-dropdown/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport {\r\n  Popover,\r\n  PopoverButton,\r\n  PopoverPanel,\r\n  Transition,\r\n} from \"@headlessui/react\"\r\nimport { convertToLocale } from \"@lib/util/money\"\r\nimport { HttpTypes } from \"@medusajs/types\"\r\nimport { Button } from \"@medusajs/ui\"\r\nimport DeleteButton from \"@modules/common/components/delete-button\"\r\nimport LineItemOptions from \"@modules/common/components/line-item-options\"\r\nimport LineItemPrice from \"@modules/common/components/line-item-price\"\r\nimport LocalizedClientLink from \"@modules/common/components/localized-client-link\"\r\nimport Thumbnail from \"@modules/products/components/thumbnail\"\r\nimport { usePathname } from \"next/navigation\"\r\nimport { Fragment, useEffect, useRef, useState } from \"react\"\r\n\r\nconst CartDropdown = ({\r\n  cart: cartState,\r\n}: {\r\n  cart?: HttpTypes.StoreCart | null\r\n}) => {\r\n  const [activeTimer, setActiveTimer] = useState<NodeJS.Timer | undefined>(\r\n    undefined\r\n  )\r\n  const [cartDropdownOpen, setCartDropdownOpen] = useState(false)\r\n\r\n  const open = () => setCartDropdownOpen(true)\r\n  const close = () => setCartDropdownOpen(false)\r\n\r\n  const totalItems =\r\n    cartState?.items?.reduce((acc, item) => {\r\n      return acc + item.quantity\r\n    }, 0) || 0\r\n\r\n  const subtotal = cartState?.subtotal ?? 0\r\n  const itemRef = useRef<number>(totalItems || 0)\r\n\r\n  const timedOpen = () => {\r\n    open()\r\n\r\n    const timer = setTimeout(close, 5000)\r\n\r\n    setActiveTimer(timer)\r\n  }\r\n\r\n  const openAndCancel = () => {\r\n    if (activeTimer) {\r\n      clearTimeout(activeTimer)\r\n    }\r\n\r\n    open()\r\n  }\r\n\r\n  // Clean up the timer when the component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      if (activeTimer) {\r\n        clearTimeout(activeTimer)\r\n      }\r\n    }\r\n  }, [activeTimer])\r\n\r\n  const pathname = usePathname()\r\n\r\n  // open cart dropdown when modifying the cart items, but only if we're not on the cart page\r\n  useEffect(() => {\r\n    if (itemRef.current !== totalItems && !pathname.includes(\"/cart\")) {\r\n      timedOpen()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [totalItems, itemRef.current])\r\n\r\n  return (\r\n    <div\r\n      className=\"h-full z-50\"\r\n      onMouseEnter={openAndCancel}\r\n      onMouseLeave={close}\r\n    >\r\n      <Popover className=\"relative h-full\">\r\n        <PopoverButton className=\"h-full\">\r\n          <LocalizedClientLink\r\n            className=\"hover:text-ui-fg-base\"\r\n            href=\"/cart\"\r\n            data-testid=\"nav-cart-link\"\r\n          >{`Cart (${totalItems})`}</LocalizedClientLink>\r\n        </PopoverButton>\r\n        <Transition\r\n          show={cartDropdownOpen}\r\n          as={Fragment}\r\n          enter=\"transition ease-out duration-200\"\r\n          enterFrom=\"opacity-0 translate-y-1\"\r\n          enterTo=\"opacity-100 translate-y-0\"\r\n          leave=\"transition ease-in duration-150\"\r\n          leaveFrom=\"opacity-100 translate-y-0\"\r\n          leaveTo=\"opacity-0 translate-y-1\"\r\n        >\r\n          <PopoverPanel\r\n            static\r\n            className=\"hidden small:block absolute top-[calc(100%+1px)] right-0 bg-white border-x border-b border-gray-200 w-[420px] text-ui-fg-base\"\r\n            data-testid=\"nav-cart-dropdown\"\r\n          >\r\n            <div className=\"p-4 flex items-center justify-center\">\r\n              <h3 className=\"text-large-semi\">Cart</h3>\r\n            </div>\r\n            {cartState && cartState.items?.length ? (\r\n              <>\r\n                <div className=\"overflow-y-scroll max-h-[402px] px-4 grid grid-cols-1 gap-y-8 no-scrollbar p-px\">\r\n                  {cartState.items\r\n                    .sort((a, b) => {\r\n                      return (a.created_at ?? \"\") > (b.created_at ?? \"\")\r\n                        ? -1\r\n                        : 1\r\n                    })\r\n                    .map((item) => (\r\n                      <div\r\n                        className=\"grid grid-cols-[122px_1fr] gap-x-4\"\r\n                        key={item.id}\r\n                        data-testid=\"cart-item\"\r\n                      >\r\n                        <LocalizedClientLink\r\n                          href={`/products/${item.product_handle}`}\r\n                          className=\"w-24\"\r\n                        >\r\n                          <Thumbnail\r\n                            thumbnail={item.thumbnail}\r\n                            images={item.variant?.product?.images}\r\n                            size=\"square\"\r\n                          />\r\n                        </LocalizedClientLink>\r\n                        <div className=\"flex flex-col justify-between flex-1\">\r\n                          <div className=\"flex flex-col flex-1\">\r\n                            <div className=\"flex items-start justify-between\">\r\n                              <div className=\"flex flex-col overflow-ellipsis whitespace-nowrap mr-4 w-[180px]\">\r\n                                <h3 className=\"text-base-regular overflow-hidden text-ellipsis\">\r\n                                  <LocalizedClientLink\r\n                                    href={`/products/${item.product_handle}`}\r\n                                    data-testid=\"product-link\"\r\n                                  >\r\n                                    {item.title}\r\n                                  </LocalizedClientLink>\r\n                                </h3>\r\n                                <LineItemOptions\r\n                                  variant={item.variant}\r\n                                  data-testid=\"cart-item-variant\"\r\n                                  data-value={item.variant}\r\n                                />\r\n                                <span\r\n                                  data-testid=\"cart-item-quantity\"\r\n                                  data-value={item.quantity}\r\n                                >\r\n                                  Quantity: {item.quantity}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-end\">\r\n                                <LineItemPrice\r\n                                  item={item}\r\n                                  style=\"tight\"\r\n                                  currencyCode={cartState.currency_code}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <DeleteButton\r\n                            id={item.id}\r\n                            className=\"mt-1\"\r\n                            data-testid=\"cart-item-remove-button\"\r\n                          >\r\n                            Remove\r\n                          </DeleteButton>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"p-4 flex flex-col gap-y-4 text-small-regular\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-ui-fg-base font-semibold\">\r\n                      Subtotal{\" \"}\r\n                      <span className=\"font-normal\">(excl. taxes)</span>\r\n                    </span>\r\n                    <span\r\n                      className=\"text-large-semi\"\r\n                      data-testid=\"cart-subtotal\"\r\n                      data-value={subtotal}\r\n                    >\r\n                      {convertToLocale({\r\n                        amount: subtotal,\r\n                        currency_code: cartState.currency_code,\r\n                      })}\r\n                    </span>\r\n                  </div>\r\n                  <LocalizedClientLink href=\"/cart\" passHref>\r\n                    <Button\r\n                      className=\"w-full\"\r\n                      size=\"large\"\r\n                      data-testid=\"go-to-cart-button\"\r\n                    >\r\n                      Go to cart\r\n                    </Button>\r\n                  </LocalizedClientLink>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div>\r\n                <div className=\"flex py-16 flex-col gap-y-4 items-center justify-center\">\r\n                  <div className=\"bg-gray-900 text-small-regular flex items-center justify-center w-6 h-6 rounded-full text-white\">\r\n                    <span>0</span>\r\n                  </div>\r\n                  <span>Your shopping bag is empty.</span>\r\n                  <div>\r\n                    <LocalizedClientLink href=\"/store\">\r\n                      <>\r\n                        <span className=\"sr-only\">Go to all products page</span>\r\n                        <Button onClick={close}>Explore products</Button>\r\n                      </>\r\n                    </LocalizedClientLink>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </PopoverPanel>\r\n        </Transition>\r\n      </Popover>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartDropdown\r\n"],"names":[],"mappings":";;;;AAQA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAQA;;;AAVA;;;;;;;;;;;AAmBA,MAAM,eAAe,CAAC,EACpB,MAAM,SAAS,EAGhB;;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAC3C;IAEF,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,MAAM,OAAO,IAAM,oBAAoB;IACvC,MAAM,QAAQ,IAAM,oBAAoB;IAExC,MAAM,aACJ,WAAW,OAAO,OAAO,CAAC,KAAK;QAC7B,OAAO,MAAM,KAAK,QAAQ;IAC5B,GAAG,MAAM;IAEX,MAAM,WAAW,WAAW,YAAY;IACxC,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAU,cAAc;IAE7C,MAAM,YAAY;QAChB;QAEA,MAAM,QAAQ,WAAW,OAAO;QAEhC,eAAe;IACjB;IAEA,MAAM,gBAAgB;QACpB,IAAI,aAAa;YACf,aAAa;QACf;QAEA;IACF;IAEA,iDAAiD;IACjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;0CAAO;oBACL,IAAI,aAAa;wBACf,aAAa;oBACf;gBACF;;QACF;iCAAG;QAAC;KAAY;IAEhB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,2FAA2F;IAC3F,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,QAAQ,OAAO,KAAK,cAAc,CAAC,SAAS,QAAQ,CAAC,UAAU;gBACjE;YACF;QACA,uDAAuD;QACzD;iCAAG;QAAC;QAAY,QAAQ,OAAO;KAAC;IAEhC,qBACE,6LAAC;QACC,WAAU;QACV,cAAc;QACd,cAAc;kBAEd,cAAA,6LAAC,oLAAA,CAAA,UAAO;YAAC,WAAU;;8BACjB,6LAAC,oLAAA,CAAA,gBAAa;oBAAC,WAAU;8BACvB,cAAA,6LAAC,kLAAA,CAAA,UAAmB;wBAClB,WAAU;wBACV,MAAK;wBACL,eAAY;kCACZ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;;;;;;;;;;;8BAE1B,6LAAC,0LAAA,CAAA,aAAU;oBACT,MAAM;oBACN,IAAI,6JAAA,CAAA,WAAQ;oBACZ,OAAM;oBACN,WAAU;oBACV,SAAQ;oBACR,OAAM;oBACN,WAAU;oBACV,SAAQ;8BAER,cAAA,6LAAC,oLAAA,CAAA,eAAY;wBACX,MAAM;wBACN,WAAU;wBACV,eAAY;;0CAEZ,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAG,WAAU;8CAAkB;;;;;;;;;;;4BAEjC,aAAa,UAAU,KAAK,EAAE,uBAC7B;;kDACE,6LAAC;wCAAI,WAAU;kDACZ,UAAU,KAAK,CACb,IAAI,CAAC,CAAC,GAAG;4CACR,OAAO,CAAC,EAAE,UAAU,IAAI,EAAE,IAAI,CAAC,EAAE,UAAU,IAAI,EAAE,IAC7C,CAAC,IACD;wCACN,GACC,GAAG,CAAC,CAAC,qBACJ,6LAAC;gDACC,WAAU;gDAEV,eAAY;;kEAEZ,6LAAC,kLAAA,CAAA,UAAmB;wDAClB,MAAM,CAAC,UAAU,EAAE,KAAK,cAAc,EAAE;wDACxC,WAAU;kEAEV,cAAA,6LAAC,kKAAA,CAAA,UAAS;4DACR,WAAW,KAAK,SAAS;4DACzB,QAAQ,KAAK,OAAO,EAAE,SAAS;4DAC/B,MAAK;;;;;;;;;;;kEAGT,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;0EACb,cAAA,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAI,WAAU;;8FACb,6LAAC;oFAAG,WAAU;8FACZ,cAAA,6LAAC,kLAAA,CAAA,UAAmB;wFAClB,MAAM,CAAC,UAAU,EAAE,KAAK,cAAc,EAAE;wFACxC,eAAY;kGAEX,KAAK,KAAK;;;;;;;;;;;8FAGf,6LAAC,8KAAA,CAAA,UAAe;oFACd,SAAS,KAAK,OAAO;oFACrB,eAAY;oFACZ,cAAY,KAAK,OAAO;;;;;;8FAE1B,6LAAC;oFACC,eAAY;oFACZ,cAAY,KAAK,QAAQ;;wFAC1B;wFACY,KAAK,QAAQ;;;;;;;;;;;;;sFAG5B,6LAAC;4EAAI,WAAU;sFACb,cAAA,6LAAC,4KAAA,CAAA,UAAa;gFACZ,MAAM;gFACN,OAAM;gFACN,cAAc,UAAU,aAAa;;;;;;;;;;;;;;;;;;;;;;0EAK7C,6LAAC,uKAAA,CAAA,UAAY;gEACX,IAAI,KAAK,EAAE;gEACX,WAAU;gEACV,eAAY;0EACb;;;;;;;;;;;;;+CAlDE,KAAK,EAAE;;;;;;;;;;kDAyDpB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAK,WAAU;;4DAAgC;4DACrC;0EACT,6LAAC;gEAAK,WAAU;0EAAc;;;;;;;;;;;;kEAEhC,6LAAC;wDACC,WAAU;wDACV,eAAY;wDACZ,cAAY;kEAEX,CAAA,GAAA,8HAAA,CAAA,kBAAe,AAAD,EAAE;4DACf,QAAQ;4DACR,eAAe,UAAU,aAAa;wDACxC;;;;;;;;;;;;0DAGJ,6LAAC,kLAAA,CAAA,UAAmB;gDAAC,MAAK;gDAAQ,QAAQ;0DACxC,cAAA,6LAAC,oLAAA,CAAA,SAAM;oDACL,WAAU;oDACV,MAAK;oDACL,eAAY;8DACb;;;;;;;;;;;;;;;;;;6DAOP,6LAAC;0CACC,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;0DAAK;;;;;;;;;;;sDAER,6LAAC;sDAAK;;;;;;sDACN,6LAAC;sDACC,cAAA,6LAAC,kLAAA,CAAA,UAAmB;gDAAC,MAAK;0DACxB,cAAA;;sEACE,6LAAC;4DAAK,WAAU;sEAAU;;;;;;sEAC1B,6LAAC,oLAAA,CAAA,SAAM;4DAAC,SAAS;sEAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYhD;GAhNM;;QA8Ca,qIAAA,CAAA,cAAW;;;KA9CxB;uCAkNS"}},
    {"offset": {"line": 1082, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1088, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/layout/components/country-select/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport {\r\n  Listbox,\r\n  ListboxButton,\r\n  ListboxOption,\r\n  ListboxOptions,\r\n  Transition,\r\n} from \"@headlessui/react\"\r\nimport { Fragment, useEffect, useMemo, useState } from \"react\"\r\nimport ReactCountryFlag from \"react-country-flag\"\r\n\r\nimport { StateType } from \"@lib/hooks/use-toggle-state\"\r\nimport { useParams, usePathname } from \"next/navigation\"\r\nimport { updateRegion } from \"@lib/data/cart\"\r\nimport { HttpTypes } from \"@medusajs/types\"\r\n\r\ntype CountryOption = {\r\n  country: string\r\n  region: string\r\n  label: string\r\n}\r\n\r\ntype CountrySelectProps = {\r\n  toggleState: StateType\r\n  regions: HttpTypes.StoreRegion[]\r\n}\r\n\r\nconst CountrySelect = ({ toggleState, regions }: CountrySelectProps) => {\r\n  const [current, setCurrent] = useState<\r\n    | { country: string | undefined; region: string; label: string | undefined }\r\n    | undefined\r\n  >(undefined)\r\n\r\n  const { countryCode } = useParams()\r\n  const currentPath = usePathname().split(`/${countryCode}`)[1]\r\n\r\n  const { state, close } = toggleState\r\n\r\n  const options = useMemo(() => {\r\n    return regions\r\n      ?.map((r) => {\r\n        return r.countries?.map((c) => ({\r\n          country: c.iso_2,\r\n          region: r.id,\r\n          label: c.display_name,\r\n        }))\r\n      })\r\n      .flat()\r\n      .sort((a, b) => (a?.label ?? \"\").localeCompare(b?.label ?? \"\"))\r\n  }, [regions])\r\n\r\n  useEffect(() => {\r\n    if (countryCode) {\r\n      const option = options?.find((o) => o?.country === countryCode)\r\n      setCurrent(option)\r\n    }\r\n  }, [options, countryCode])\r\n\r\n  const handleChange = (option: CountryOption) => {\r\n    updateRegion(option.country, currentPath)\r\n    close()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Listbox\r\n        as=\"span\"\r\n        onChange={handleChange}\r\n        defaultValue={\r\n          countryCode\r\n            ? options?.find((o) => o?.country === countryCode)\r\n            : undefined\r\n        }\r\n      >\r\n        <ListboxButton className=\"py-1 w-full\">\r\n          <div className=\"txt-compact-small flex items-start gap-x-2\">\r\n            <span>Shipping to:</span>\r\n            {current && (\r\n              <span className=\"txt-compact-small flex items-center gap-x-2\">\r\n                {/* @ts-ignore */}\r\n                <ReactCountryFlag\r\n                  svg\r\n                  style={{\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                  }}\r\n                  countryCode={current.country ?? \"\"}\r\n                />\r\n                {current.label}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </ListboxButton>\r\n        <div className=\"flex relative w-full min-w-[320px]\">\r\n          <Transition\r\n            show={state}\r\n            as={Fragment}\r\n            leave=\"transition ease-in duration-150\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <ListboxOptions\r\n              className=\"absolute -bottom-[calc(100%-36px)] left-0 xsmall:left-auto xsmall:right-0 max-h-[442px] overflow-y-scroll z-[900] bg-white drop-shadow-md text-small-regular uppercase text-black no-scrollbar rounded-rounded w-full\"\r\n              static\r\n            >\r\n              {options?.map((o, index) => {\r\n                return (\r\n                  <ListboxOption\r\n                    key={index}\r\n                    value={o}\r\n                    className=\"py-2 hover:bg-gray-200 px-3 cursor-pointer flex items-center gap-x-2\"\r\n                  >\r\n                    {/* @ts-ignore */}\r\n                    <ReactCountryFlag\r\n                      svg\r\n                      style={{\r\n                        width: \"16px\",\r\n                        height: \"16px\",\r\n                      }}\r\n                      countryCode={o?.country ?? \"\"}\r\n                    />{\" \"}\r\n                    {o?.label}\r\n                  </ListboxOption>\r\n                )\r\n              })}\r\n            </ListboxOptions>\r\n          </Transition>\r\n        </div>\r\n      </Listbox>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountrySelect\r\n"],"names":[],"mappings":";;;;AASA;AACA;AAGA;AACA;AAZA;AAAA;;;AAFA;;;;;;AA4BA,MAAM,gBAAgB,CAAC,EAAE,WAAW,EAAE,OAAO,EAAsB;;IACjE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAGnC;IAEF,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAChC,MAAM,cAAc,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE;IAE7D,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG;IAEzB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;0CAAE;YACtB,OAAO,SACH;kDAAI,CAAC;oBACL,OAAO,EAAE,SAAS,EAAE;0DAAI,CAAC,IAAM,CAAC;gCAC9B,SAAS,EAAE,KAAK;gCAChB,QAAQ,EAAE,EAAE;gCACZ,OAAO,EAAE,YAAY;4BACvB,CAAC;;gBACH;iDACC,OACA;kDAAK,CAAC,GAAG,IAAM,CAAC,GAAG,SAAS,EAAE,EAAE,aAAa,CAAC,GAAG,SAAS;;QAC/D;yCAAG;QAAC;KAAQ;IAEZ,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,aAAa;gBACf,MAAM,SAAS,SAAS;+CAAK,CAAC,IAAM,GAAG,YAAY;;gBACnD,WAAW;YACb;QACF;kCAAG;QAAC;QAAS;KAAY;IAEzB,MAAM,eAAe,CAAC;QACpB,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD,EAAE,OAAO,OAAO,EAAE;QAC7B;IACF;IAEA,qBACE,6LAAC;kBACC,cAAA,6LAAC,oLAAA,CAAA,UAAO;YACN,IAAG;YACH,UAAU;YACV,cACE,cACI,SAAS,KAAK,CAAC,IAAM,GAAG,YAAY,eACpC;;8BAGN,6LAAC,oLAAA,CAAA,gBAAa;oBAAC,WAAU;8BACvB,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;0CAAK;;;;;;4BACL,yBACC,6LAAC;gCAAK,WAAU;;kDAEd,6LAAC,sLAAA,CAAA,UAAgB;wCACf,GAAG;wCACH,OAAO;4CACL,OAAO;4CACP,QAAQ;wCACV;wCACA,aAAa,QAAQ,OAAO,IAAI;;;;;;oCAEjC,QAAQ,KAAK;;;;;;;;;;;;;;;;;;8BAKtB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,0LAAA,CAAA,aAAU;wBACT,MAAM;wBACN,IAAI,6JAAA,CAAA,WAAQ;wBACZ,OAAM;wBACN,WAAU;wBACV,SAAQ;kCAER,cAAA,6LAAC,oLAAA,CAAA,iBAAc;4BACb,WAAU;4BACV,MAAM;sCAEL,SAAS,IAAI,CAAC,GAAG;gCAChB,qBACE,6LAAC,oLAAA,CAAA,gBAAa;oCAEZ,OAAO;oCACP,WAAU;;sDAGV,6LAAC,sLAAA,CAAA,UAAgB;4CACf,GAAG;4CACH,OAAO;gDACL,OAAO;gDACP,QAAQ;4CACV;4CACA,aAAa,GAAG,WAAW;;;;;;wCAC1B;wCACF,GAAG;;mCAbC;;;;;4BAgBX;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOd;GAxGM;;QAMoB,qIAAA,CAAA,YAAS;QACb,qIAAA,CAAA,cAAW;;;KAP3B;uCA0GS"}},
    {"offset": {"line": 1276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1282, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/layout/components/side-menu/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Popover, PopoverPanel, Transition } from \"@headlessui/react\"\r\nimport { ArrowRightMini, XMark } from \"@medusajs/icons\"\r\nimport { Text, clx, useToggleState } from \"@medusajs/ui\"\r\nimport { Fragment } from \"react\"\r\n\r\nimport LocalizedClientLink from \"@modules/common/components/localized-client-link\"\r\nimport CountrySelect from \"../country-select\"\r\nimport { HttpTypes } from \"@medusajs/types\"\r\n\r\nconst SideMenuItems = {\r\n  Home: \"/\",\r\n  Store: \"/store\",\r\n  Account: \"/account\",\r\n  Cart: \"/cart\",\r\n}\r\n\r\nconst SideMenu = ({ regions }: { regions: HttpTypes.StoreRegion[] | null }) => {\r\n  const toggleState = useToggleState()\r\n\r\n  return (\r\n    <div className=\"h-full\">\r\n      <div className=\"flex items-center h-full\">\r\n        <Popover className=\"h-full flex\">\r\n          {({ open, close }) => (\r\n            <>\r\n              <div className=\"relative flex h-full\">\r\n                <Popover.Button\r\n                  data-testid=\"nav-menu-button\"\r\n                  className=\"relative h-full flex items-center transition-all ease-out duration-200 focus:outline-none hover:text-ui-fg-base\"\r\n                >\r\n                  Menu\r\n                </Popover.Button>\r\n              </div>\r\n\r\n              <Transition\r\n                show={open}\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-150\"\r\n                enterFrom=\"opacity-0\"\r\n                enterTo=\"opacity-100 backdrop-blur-2xl\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 backdrop-blur-2xl\"\r\n                leaveTo=\"opacity-0\"\r\n              >\r\n                <PopoverPanel className=\"flex flex-col absolute w-full pr-4 sm:pr-0 sm:w-1/3 2xl:w-1/4 sm:min-w-min h-[calc(100vh-1rem)] z-30 inset-x-0 text-sm text-ui-fg-on-color m-2 backdrop-blur-2xl\">\r\n                  <div\r\n                    data-testid=\"nav-menu-popup\"\r\n                    className=\"flex flex-col h-full bg-[rgba(3,7,18,0.5)] rounded-rounded justify-between p-6\"\r\n                  >\r\n                    <div className=\"flex justify-end\" id=\"xmark\">\r\n                      <button data-testid=\"close-menu-button\" onClick={close}>\r\n                        <XMark />\r\n                      </button>\r\n                    </div>\r\n                    <ul className=\"flex flex-col gap-6 items-start justify-start\">\r\n                      {Object.entries(SideMenuItems).map(([name, href]) => {\r\n                        return (\r\n                          <li key={name}>\r\n                            <LocalizedClientLink\r\n                              href={href}\r\n                              className=\"text-3xl leading-10 hover:text-ui-fg-disabled\"\r\n                              onClick={close}\r\n                              data-testid={`${name.toLowerCase()}-link`}\r\n                            >\r\n                              {name}\r\n                            </LocalizedClientLink>\r\n                          </li>\r\n                        )\r\n                      })}\r\n                    </ul>\r\n                    <div className=\"flex flex-col gap-y-6\">\r\n                      <div\r\n                        className=\"flex justify-between\"\r\n                        onMouseEnter={toggleState.open}\r\n                        onMouseLeave={toggleState.close}\r\n                      >\r\n                        {regions && (\r\n                          <CountrySelect\r\n                            toggleState={toggleState}\r\n                            regions={regions}\r\n                          />\r\n                        )}\r\n                        <ArrowRightMini\r\n                          className={clx(\r\n                            \"transition-transform duration-150\",\r\n                            toggleState.state ? \"-rotate-90\" : \"\"\r\n                          )}\r\n                        />\r\n                      </div>\r\n                      <Text className=\"flex justify-between txt-compact-small\">\r\n                        Â© {new Date().getFullYear()} Qori Joyeria. All rights\r\n                        reserved.\r\n                      </Text>\r\n                    </div>\r\n                  </div>\r\n                </PopoverPanel>\r\n              </Transition>\r\n            </>\r\n          )}\r\n        </Popover>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideMenu\r\n"],"names":[],"mappings":";;;;AAKA;AAEA;AACA;AAJA;AAFA;AAAA;AACA;AAAA;AACA;AAAA;;;AAJA;;;;;;;AAWA,MAAM,gBAAgB;IACpB,MAAM;IACN,OAAO;IACP,SAAS;IACT,MAAM;AACR;AAEA,MAAM,WAAW,CAAC,EAAE,OAAO,EAA+C;;IACxE,MAAM,cAAc,CAAA,GAAA,+MAAA,CAAA,iBAAc,AAAD;IAEjC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,oLAAA,CAAA,UAAO;gBAAC,WAAU;0BAChB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,iBACf;;0CACE,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,oLAAA,CAAA,UAAO,CAAC,MAAM;oCACb,eAAY;oCACZ,WAAU;8CACX;;;;;;;;;;;0CAKH,6LAAC,0LAAA,CAAA,aAAU;gCACT,MAAM;gCACN,IAAI,6JAAA,CAAA,WAAQ;gCACZ,OAAM;gCACN,WAAU;gCACV,SAAQ;gCACR,OAAM;gCACN,WAAU;gCACV,SAAQ;0CAER,cAAA,6LAAC,oLAAA,CAAA,eAAY;oCAAC,WAAU;8CACtB,cAAA,6LAAC;wCACC,eAAY;wCACZ,WAAU;;0DAEV,6LAAC;gDAAI,WAAU;gDAAmB,IAAG;0DACnC,cAAA,6LAAC;oDAAO,eAAY;oDAAoB,SAAS;8DAC/C,cAAA,6LAAC,sMAAA,CAAA,QAAK;;;;;;;;;;;;;;;0DAGV,6LAAC;gDAAG,WAAU;0DACX,OAAO,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK;oDAC9C,qBACE,6LAAC;kEACC,cAAA,6LAAC,kLAAA,CAAA,UAAmB;4DAClB,MAAM;4DACN,WAAU;4DACV,SAAS;4DACT,eAAa,GAAG,KAAK,WAAW,GAAG,KAAK,CAAC;sEAExC;;;;;;uDAPI;;;;;gDAWb;;;;;;0DAEF,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDACC,WAAU;wDACV,cAAc,YAAY,IAAI;wDAC9B,cAAc,YAAY,KAAK;;4DAE9B,yBACC,6LAAC,wKAAA,CAAA,UAAa;gEACZ,aAAa;gEACb,SAAS;;;;;;0EAGb,6LAAC,4NAAA,CAAA,iBAAc;gEACb,WAAW,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EACX,qCACA,YAAY,KAAK,GAAG,eAAe;;;;;;;;;;;;kEAIzC,6LAAC,gLAAA,CAAA,OAAI;wDAAC,WAAU;;4DAAyC;4DACpD,IAAI,OAAO,WAAW;4DAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAapD;GAvFM;;QACgB,+MAAA,CAAA,iBAAc;;;KAD9B;uCAyFS"}},
    {"offset": {"line": 1493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1499, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/migue/OneDrive/Escritorio/qory/ecommerce/qori-medusa-front/src/modules/shipping/components/free-shipping-price-nudge/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { convertToLocale } from \"@lib/util/money\"\r\nimport { CheckCircleSolid, XMark } from \"@medusajs/icons\"\r\nimport {\r\n  HttpTypes,\r\n  StoreCart,\r\n  StoreCartShippingOption,\r\n  StorePrice,\r\n} from \"@medusajs/types\"\r\nimport { Button, clx } from \"@medusajs/ui\"\r\nimport LocalizedClientLink from \"@modules/common/components/localized-client-link\"\r\nimport { useState } from \"react\"\r\nimport { StoreFreeShippingPrice } from \"types/global\"\r\n\r\nconst computeTarget = (\r\n  cart: HttpTypes.StoreCart,\r\n  price: HttpTypes.StorePrice\r\n) => {\r\n  const priceRule = (price.price_rules || []).find(\r\n    (pr) => pr.attribute === \"item_total\"\r\n  )!\r\n\r\n  const currentAmount = cart.item_total\r\n  const targetAmount = parseFloat(priceRule.value)\r\n\r\n  if (priceRule.operator === \"gt\") {\r\n    return {\r\n      current_amount: currentAmount,\r\n      target_amount: targetAmount,\r\n      target_reached: currentAmount > targetAmount,\r\n      target_remaining:\r\n        currentAmount > targetAmount ? 0 : targetAmount + 1 - currentAmount,\r\n      remaining_percentage: (currentAmount / targetAmount) * 100,\r\n    }\r\n  } else if (priceRule.operator === \"gte\") {\r\n    return {\r\n      current_amount: currentAmount,\r\n      target_amount: targetAmount,\r\n      target_reached: currentAmount > targetAmount,\r\n      target_remaining:\r\n        currentAmount > targetAmount ? 0 : targetAmount - currentAmount,\r\n      remaining_percentage: (currentAmount / targetAmount) * 100,\r\n    }\r\n  } else if (priceRule.operator === \"lt\") {\r\n    return {\r\n      current_amount: currentAmount,\r\n      target_amount: targetAmount,\r\n      target_reached: targetAmount > currentAmount,\r\n      target_remaining:\r\n        targetAmount > currentAmount ? 0 : currentAmount + 1 - targetAmount,\r\n      remaining_percentage: (currentAmount / targetAmount) * 100,\r\n    }\r\n  } else if (priceRule.operator === \"lte\") {\r\n    return {\r\n      current_amount: currentAmount,\r\n      target_amount: targetAmount,\r\n      target_reached: targetAmount > currentAmount,\r\n      target_remaining:\r\n        targetAmount > currentAmount ? 0 : currentAmount - targetAmount,\r\n      remaining_percentage: (currentAmount / targetAmount) * 100,\r\n    }\r\n  } else {\r\n    return {\r\n      current_amount: currentAmount,\r\n      target_amount: targetAmount,\r\n      target_reached: currentAmount === targetAmount,\r\n      target_remaining:\r\n        targetAmount > currentAmount ? 0 : targetAmount - currentAmount,\r\n      remaining_percentage: (currentAmount / targetAmount) * 100,\r\n    }\r\n  }\r\n}\r\n\r\nexport default function ShippingPriceNudge({\r\n  variant = \"inline\",\r\n  cart,\r\n  shippingOptions,\r\n}: {\r\n  variant?: \"popup\" | \"inline\"\r\n  cart: StoreCart\r\n  shippingOptions: StoreCartShippingOption[]\r\n}) {\r\n  if (!cart || !shippingOptions?.length) {\r\n    return\r\n  }\r\n\r\n  // Check if any shipping options have a conditional price based on item_total\r\n  const freeShippingPrice = shippingOptions\r\n    .map((shippingOption) => {\r\n      const calculatedPrice = shippingOption.calculated_price\r\n\r\n      if (!calculatedPrice) {\r\n        return\r\n      }\r\n\r\n      // Get all prices that are:\r\n      // 1. Currency code is same as the cart's\r\n      // 2. Have a rule that is set on item_total\r\n      const validCurrencyPrices = shippingOption.prices.filter(\r\n        (price) =>\r\n          price.currency_code === cart.currency_code &&\r\n          (price.price_rules || []).some(\r\n            (priceRule) => priceRule.attribute === \"item_total\"\r\n          )\r\n      )\r\n\r\n      return validCurrencyPrices.map((price) => {\r\n        return {\r\n          ...price,\r\n          shipping_option_id: shippingOption.id,\r\n          ...computeTarget(cart, price),\r\n        }\r\n      })\r\n    })\r\n    .flat(1)\r\n    .filter(Boolean)\r\n    // We focus here entirely on free shipping, but this can be edited to handle multiple layers\r\n    // of reduced shipping prices.\r\n    .find((price) => price?.amount === 0)\r\n\r\n  if (!freeShippingPrice) {\r\n    return\r\n  }\r\n\r\n  if (variant === \"popup\") {\r\n    return <FreeShippingPopup cart={cart} price={freeShippingPrice} />\r\n  } else {\r\n    return <FreeShippingInline cart={cart} price={freeShippingPrice} />\r\n  }\r\n}\r\n\r\nfunction FreeShippingInline({\r\n  cart,\r\n  price,\r\n}: {\r\n  cart: StoreCart\r\n  price: StorePrice & {\r\n    target_reached: boolean\r\n    target_remaining: number\r\n    remaining_percentage: number\r\n  }\r\n}) {\r\n  return (\r\n    <div className=\"bg-neutral-100 p-2 rounded-lg border\">\r\n      <div className=\"space-y-1.5\">\r\n        <div className=\"flex justify-between text-xs text-neutral-600\">\r\n          <div>\r\n            {price.target_reached ? (\r\n              <div className=\"flex items-center gap-1.5\">\r\n                <CheckCircleSolid className=\"text-green-500 inline-block\" />{\" \"}\r\n                Free Shipping unlocked!\r\n              </div>\r\n            ) : (\r\n              `Unlock Free Shipping`\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            className={clx(\"visible\", {\r\n              \"opacity-0 invisible\": price.target_reached,\r\n            })}\r\n          >\r\n            Only{\" \"}\r\n            <span className=\"text-neutral-950\">\r\n              {convertToLocale({\r\n                amount: price.target_remaining,\r\n                currency_code: cart.currency_code,\r\n              })}\r\n            </span>{\" \"}\r\n            away\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between gap-1\">\r\n          <div\r\n            className={clx(\r\n              \"bg-gradient-to-r from-zinc-400 to-zinc-500 h-1 rounded-full max-w-full duration-500 ease-in-out\",\r\n              {\r\n                \"from-green-400 to-green-500\": price.target_reached,\r\n              }\r\n            )}\r\n            style={{ width: `${price.remaining_percentage}%` }}\r\n          ></div>\r\n          <div className=\"bg-neutral-300 h-1 rounded-full w-fit flex-grow\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction FreeShippingPopup({\r\n  cart,\r\n  price,\r\n}: {\r\n  cart: StoreCart\r\n  price: StoreFreeShippingPrice\r\n}) {\r\n  const [isClosed, setIsClosed] = useState(false)\r\n\r\n  return (\r\n    <div\r\n      className={clx(\r\n        \"fixed bottom-5 right-5 flex flex-col items-end gap-2 transition-all duration-500 ease-in-out z-10\",\r\n        {\r\n          \"opacity-0 invisible delay-1000\": price.target_reached,\r\n          \"opacity-0 invisible\": isClosed,\r\n          \"opacity-100 visible\": !price.target_reached && !isClosed,\r\n        }\r\n      )}\r\n    >\r\n      <div>\r\n        <Button\r\n          className=\"rounded-full bg-neutral-900 shadow-none outline-none border-none text-[15px] p-2\"\r\n          onClick={() => setIsClosed(true)}\r\n        >\r\n          <XMark />\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"w-[400px] bg-black text-white p-6 rounded-lg \">\r\n        <div className=\"pb-4\">\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex justify-between text-[15px] text-neutral-400\">\r\n              <div>\r\n                {price.target_reached ? (\r\n                  <div className=\"flex items-center gap-1.5\">\r\n                    <CheckCircleSolid className=\"text-green-500 inline-block\" />{\" \"}\r\n                    Free Shipping unlocked!\r\n                  </div>\r\n                ) : (\r\n                  `Unlock Free Shipping`\r\n                )}\r\n              </div>\r\n\r\n              <div\r\n                className={clx(\"visible\", {\r\n                  \"opacity-0 invisible\": price.target_reached,\r\n                })}\r\n              >\r\n                Only{\" \"}\r\n                <span className=\"text-white\">\r\n                  {convertToLocale({\r\n                    amount: price.target_remaining,\r\n                    currency_code: cart.currency_code,\r\n                  })}\r\n                </span>{\" \"}\r\n                away\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-between gap-1\">\r\n              <div\r\n                className={clx(\r\n                  \"bg-gradient-to-r from-zinc-400 to-zinc-500 h-1.5 rounded-full max-w-full duration-500 ease-in-out\",\r\n                  {\r\n                    \"from-green-400 to-green-500\": price.target_reached,\r\n                  }\r\n                )}\r\n                style={{ width: `${price.remaining_percentage}%` }}\r\n              ></div>\r\n              <div className=\"bg-zinc-600 h-1.5 rounded-full w-fit flex-grow\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex gap-3\">\r\n          <LocalizedClientLink\r\n            className=\"rounded-2xl bg-transparent shadow-none outline-none border-[1px] border-white text-[15px] py-2.5 px-4\"\r\n            href=\"/cart\"\r\n          >\r\n            View cart\r\n          </LocalizedClientLink>\r\n\r\n          <LocalizedClientLink\r\n            className=\"flex-grow rounded-2xl bg-white text-neutral-950 shadow-none outline-none border-[1px] border-white text-[15px] py-2.5 px-4 text-center\"\r\n            href=\"/store\"\r\n          >\r\n            View products\r\n          </LocalizedClientLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1902, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}